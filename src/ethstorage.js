const fs = require("fs");
const {ethers} = require("ethers");
const {BlobUploader} = require("./uploader");
const {EncodeBlobs, BLOB_FILE_SIZE} = require("./blobs");

const MAX_BLOB_COUNT = 3;
const ETH_STORAGE = "0xb4B46bdAA835F8E4b4d8e208B6559cD267851051";
const flatDirectoryBlobAbi = [
    "constructor(uint8 slotLimit) public",
    "function initBlobParams(uint32 size, address storageAddress) public",
    "function setDefault(bytes memory _defaultFile) public",
    "function upfrontPayment() external view returns (uint256)",
    "function getChunkHash(bytes memory name, uint256 chunkId) public view returns (bytes32)",
    "function writeChunks(bytes memory name, uint256[] memory chunkIds, uint256[] memory sizes) external payable",
    "function refund() public",
    "function remove(bytes memory name) external returns (uint256)",
    "function countChunks(bytes memory name) external view returns (uint256)",
];

const stringToHex = (s) => ethers.hexlify(ethers.toUtf8Bytes(s));

class EthStorage {
    #wallet;
    #blobUploader;
    #contractAddr;

    constructor(rpc, privateKey, contractAddr = null) {
        const provider = new ethers.JsonRpcProvider(rpc);
        this.#wallet = new ethers.Wallet(privateKey, provider);
        this.#blobUploader = new BlobUploader(rpc, privateKey);
        this.#contractAddr = contractAddr;
    }

    async #initParams(contract, ethStorage) {
        try {
            const tx = await contract.initBlobParams(BLOB_FILE_SIZE, ethStorage);
            const txReceipt = await tx.wait();
            return txReceipt.status;
        } catch (e) {
            console.log(e.message);
            return false;
        }
    }

    async deployDirectory(ethStorage) {
        const contractByteCode = '0x60c0604052600060a09081526006906200001a90826200015d565b503480156200002857600080fd5b5060405162003a7e38038062003a7e8339810160408190526200004b9162000229565b60ff8116608052806200005e3362000066565b505062000255565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000e357607f821691505b6020821081036200010457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200015857600081815260208120601f850160051c81016020861015620001335750805b601f850160051c820191505b8181101562000154578281556001016200013f565b5050505b505050565b81516001600160401b03811115620001795762000179620000b8565b62000191816200018a8454620000ce565b846200010a565b602080601f831160018114620001c95760008415620001b05750858301515b600019600386901b1c1916600185901b17855562000154565b600085815260208120601f198616915b82811015620001fa57888601518255948401946001909101908401620001d9565b5085821015620002195787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156200023c57600080fd5b815160ff811681146200024e57600080fd5b9392505050565b608051613806620002786000396000818161055c015261182401526138066000f3fe608060405260043610620001fa5760003560e01c80635ba1d9e5116200010f578063a9950abf11620000a3578063e72438b0116200006d578063e72438b01462000789578063f14c7ad714620007c5578063f2fde38b14620007dd578063f916c5b0146200080257620001fa565b8063a9950abf14620006e6578063caf12836146200070b578063d84eb56c1462000746578063dd473fae146200076b57620001fa565b806377ccbd9f11620000e557806377ccbd9f14620006575780638bf4515c146200067c5780638da5cb5b14620006a1578063956a343314620006c157620001fa565b80635ba1d9e514620005cf578063715018a614620005f457806372e14dd7146200060c57620001fa565b80631fbfa1271162000193578063492c7b2a116200015d578063492c7b2a14620005355780634eed7cf1146200054c57806358edef4c1462000592578063590e1ae314620005b757620001fa565b80631fbfa12714620004bc5780632b68b9c614620004d357806342216bed14620004eb57806343e29ff2146200051057620001fa565b80631a7237e011620001d55780631a7237e014620004005780631c5ee10c14620004355780631c993ad514620004705780631ccbc6da146200049557620001fa565b8063038cd79f146200037c57806309362861146200039557806311ce026714620003c5575b3480156200020757600080fd5b506000366060808284036200022d57505060408051602081019091526000815262000371565b8383600081811062000243576200024362002bb6565b9050013560f81c60f81b6001600160f81b031916602f60f81b146200028f57505060408051808201909152600e81526d0d2dcc6dee4e4cac6e840e0c2e8d60931b602082015262000371565b83836200029e60018262002be2565b818110620002b057620002b062002bb6565b909101356001600160f81b031916602f60f81b039050620003125762000309620002de846001818862002bf8565b6006604051602001620002f49392919062002c5a565b60405160208183030381529060405262000827565b50905062000364565b6200036062000325846001818862002bf8565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506200082792505050565b5090505b6200036f8162000896565b505b915050805190602001f35b620003936200038d36600462002dfa565b620008d7565b005b348015620003a257600080fd5b50620003ad620009b5565b604051620003bc919062002ebd565b60405180910390f35b348015620003d257600080fd5b50600354620003e7906001600160a01b031681565b6040516001600160a01b039091168152602001620003bc565b3480156200040d57600080fd5b50620004256200041f36600462002ed2565b62000a4b565b604051620003bc92919062002f1a565b3480156200044257600080fd5b506200045a6200045436600462002f40565b62000ac9565b60408051928352602083019190915201620003bc565b3480156200047d57600080fd5b50620003936200048f36600462002f40565b62000b2e565b348015620004a257600080fd5b50620004ad62000b6d565b604051908152602001620003bc565b62000393620004cd36600462003008565b62000be3565b348015620004e057600080fd5b506200039362000d3c565b348015620004f857600080fd5b50620004ad6200050a36600462002ed2565b62000d77565b3480156200051d57600080fd5b50620003936200052f366004620030b1565b62000df3565b6200039362000546366004620030f3565b62000e68565b3480156200055957600080fd5b507f000000000000000000000000000000000000000000000000000000000000000060ff1615155b6040519015158152602001620003bc565b3480156200059f57600080fd5b50620004ad620005b136600462002f40565b62000f59565b348015620005c457600080fd5b506200039362000ff4565b348015620005dc57600080fd5b5062000581620005ee36600462002ed2565b6200105e565b3480156200060157600080fd5b5062000393620010f9565b3480156200061957600080fd5b50620006486200062b36600462002f40565b805160209182012060009081526005909152604090205460ff1690565b604051620003bc91906200317f565b3480156200066457600080fd5b5062000393620006763660046200319c565b62001134565b3480156200068957600080fd5b50620004256200069b36600462002f40565b62000827565b348015620006ae57600080fd5b506002546001600160a01b0316620003e7565b348015620006ce57600080fd5b50620004ad620006e0366004620031f6565b62001176565b348015620006f357600080fd5b50620003936200070536600462003219565b6200124e565b3480156200071857600080fd5b50620007306200072a36600462002ed2565b6200129d565b60408051928352901515602083015201620003bc565b3480156200075357600080fd5b50620004ad6200076536600462002ed2565b62001304565b3480156200077857600080fd5b50651b585b9d585b60d21b620004ad565b3480156200079657600080fd5b50600254620007af90600160a01b900463ffffffff1681565b60405163ffffffff9091168152602001620003bc565b348015620007d257600080fd5b506200058162001398565b348015620007ea57600080fd5b5062000393620007fc36600462003219565b620013c4565b3480156200080f57600080fd5b50620004ad6200082136600462002f40565b62001463565b6060600060026200084f84805160209182012060009081526005909152604090205460ff1690565b600281111562000863576200086362003169565b0362000884576200087b8380519060200120620014d3565b91509150915091565b6200087b8380519060200120620016e7565b600081516040620008a8919062003237565b9050601f19620008ba82602062003237565b620008c790601f62003237565b1690506020808303528060208303f35b6002546001600160a01b031633146200090d5760405162461bcd60e51b815260040162000904906200324d565b60405180910390fd5b60006200093184805160209182012060009081526005909152604090205460ff1690565b905060008160028111156200094a576200094a62003169565b14806200096b5750600181600281111562000969576200096962003169565b145b6200098a5760405162461bcd60e51b8152600401620009049062003282565b6200099784600162001134565b620009ae8480519060200120600085853462001814565b505b505050565b60068054620009c49062002c24565b80601f0160208091040260200160405190810160405280929190818152602001828054620009f29062002c24565b801562000a435780601f1062000a175761010080835404028352916020019162000a43565b820191906000526020600020905b81548152906001019060200180831162000a2557829003601f168201915b505050505081565b60606000600262000a7385805160209182012060009081526005909152604090205460ff1690565b600281111562000a875762000a8762003169565b0362000aaa5762000aa0848051906020012084620018fd565b9150915062000ac2565b62000abd848051906020012084620019f5565b915091505b9250929050565b600080600262000af084805160209182012060009081526005909152604090205460ff1690565b600281111562000b045762000b0462003169565b0362000b1c576200087b838051906020012062001a6e565b6200087b838051906020012062001ac5565b6002546001600160a01b0316331462000b5b5760405162461bcd60e51b815260040162000904906200324d565b600662000b69828262003303565b5050565b60035460408051630e65e36d60e11b815290516000926001600160a01b031691631ccbc6da9160048083019260209291908290030181865afa15801562000bb8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bde9190620033cf565b905090565b6002546001600160a01b0316331462000c105760405162461bcd60e51b815260040162000904906200324d565b62000c1a62001398565b62000c815760405162461bcd60e51b815260206004820152603060248201527f5468652063757272656e74206e6574776f726b20646f6573206e6f742073757060448201526f1c1bdc9d08189b1bd8881d5c1b1bd85960821b606482015260840162000904565b600062000ca584805160209182012060009081526005909152604090205460ff1690565b9050600081600281111562000cbe5762000cbe62003169565b148062000cdf5750600281600281111562000cdd5762000cdd62003169565b145b62000cfe5760405162461bcd60e51b8152600401620009049062003282565b600081600281111562000d155762000d1562003169565b0362000d285762000d2884600262001134565b620009ae8480519060200120848462001b12565b6002546001600160a01b0316331462000d695760405162461bcd60e51b815260040162000904906200324d565b6002546001600160a01b0316ff5b6000600262000d9d84805160209182012060009081526005909152604090205460ff1690565b600281111562000db15762000db162003169565b0362000dd25762000dca83805190602001208362001176565b905062000ded565b600062000de0848462000a4b565b5080516020909101209150505b92915050565b6002546001600160a01b0316331462000e205760405162461bcd60e51b815260040162000904906200324d565b6002805463ffffffff909316600160a01b0263ffffffff60a01b1990931692909217909155600380546001600160a01b039092166001600160a01b0319909216919091179055565b6002546001600160a01b0316331462000e955760405162461bcd60e51b815260040162000904906200324d565b600062000eb985805160209182012060009081526005909152604090205460ff1690565b9050600081600281111562000ed25762000ed262003169565b148062000ef35750600181600281111562000ef15762000ef162003169565b145b62000f125760405162461bcd60e51b8152600401620009049062003282565b600081600281111562000f295762000f2962003169565b0362000f3c5762000f3c85600162001134565b62000f5285805190602001208585853462001814565b5050505050565b6002546000906001600160a01b0316331462000f895760405162461bcd60e51b815260040162000904906200324d565b600262000fad83805160209182012060009081526005909152604090205460ff1690565b600281111562000fc15762000fc162003169565b0362000fdb5762000ded8280519060200120600062001e8f565b62000ded828051906020012060006200200c565b919050565b6002546001600160a01b03163314620010215760405162461bcd60e51b815260040162000904906200324d565b6002546040516001600160a01b03909116904780156108fc02916000818181858888f193505050501580156200105b573d6000803e3d6000fd5b50565b6002546000906001600160a01b031633146200108e5760405162461bcd60e51b815260040162000904906200324d565b6002620010b284805160209182012060009081526005909152604090205460ff1690565b6002811115620010c657620010c662003169565b03620010df5762000dca838051906020012083620020d4565b620010f283805190602001208362002226565b9392505050565b6002546001600160a01b03163314620011265760405162461bcd60e51b815260040162000904906200324d565b62001132600062002316565b565b81516020808401919091206000908152600590915260409020805482919060ff191660018360028111156200116d576200116d62003169565b02179055505050565b6000828152600460205260408120548210620011955750600062000ded565b600354600084815260046020526040902080546001600160a01b039092169163d8389dc5919085908110620011ce57620011ce62002bb6565b90600052602060002001546040518263ffffffff1660e01b8152600401620011f891815260200190565b602060405180830381865afa15801562001216573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200123c9190620033e9565b67ffffffffffffffff19169392505050565b6002546001600160a01b031633146200127b5760405162461bcd60e51b815260040162000904906200324d565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806002620012c485805160209182012060009081526005909152604090205460ff1690565b6002811115620012d857620012d862003169565b03620012f15762000aa084805190602001208462002368565b62000abd8480519060200120846200243f565b6002546000906001600160a01b03163314620013345760405162461bcd60e51b815260040162000904906200324d565b60026200135884805160209182012060009081526005909152604090205460ff1690565b60028111156200136c576200136c62003169565b03620013855762000dca83805190602001208362001e8f565b620010f28380519060200120836200200c565b6003546000906001600160a01b03161580159062000bde57506000620013bd62000b6d565b1015905090565b6002546001600160a01b03163314620013f15760405162461bcd60e51b815260040162000904906200324d565b6001600160a01b038116620014585760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000904565b6200105b8162002316565b600060026200148983805160209182012060009081526005909152604090205460ff1690565b60028111156200149d576200149d62003169565b03620014c15762000ded828051906020012060009081526004602052604090205490565b62000ded828051906020012062002497565b60606000806000620014e58562001a6e565b91509150806000036200152d5760005b6040519080825280601f01601f19166020018201604052801562001520576020820181803683370190505b5095600095509350505050565b6000826001600160401b038111156200154a576200154a62002ce7565b6040519080825280601f01601f19166020018201604052801562001575576020820181803683370190505b5090506000805b83811015620016d8576000888152600460205260408120805483908110620015a857620015a862002bb6565b600091825260208220015460035460405163afd5644d60e01b8152600481018390529193506001600160a01b03169063afd5644d90602401602060405180830381865afa158015620015fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016249190620033cf565b60035460405163bea94b8b60e01b81529192506001600160a01b03169063bea94b8b906200165f908590600190600090879060040162003416565b600060405180830381865afa1580156200167d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620016a791908101906200344b565b508060406020868801013e620016be818562003237565b935050508080620016cf90620034ca565b9150506200157c565b50909660019650945050505050565b60606000806000620016f98562001ac5565b91509150806000036200170e576000620014f5565b6000826001600160401b038111156200172b576200172b62002ce7565b6040519080825280601f01601f19166020018201604052801562001756576020820181803683370190505b5090506020810160005b83811015620016d857600088815260208181526040808320848452909152812054906200178d82620024d6565b15620017cf576200179e8260e01c90565b60008b81526001602090815260408083208784529091529020909150620017c7908386620024eb565b5050620017ee565b81620017db816200259f565b509150620017ea818662002605565b5050505b620017fa818562003237565b9350505080806200180b90620034ca565b91505062001760565b62001820858562002664565b60ff7f0000000000000000000000000000000000000000000000000000000000000000168211156200188757620018696200185d8484846200277c565b6001600160a01b031690565b60008681526020818152604080832088845290915290205562000f52565b60008581526001602090815260408083208784528252918290208251601f8601839004830281018301909352848352620018de92909186908690819084018382808284376000920191909152506200283892505050565b6000868152602081815260408083208884529091529020555050505050565b60606000806200190e858562002368565b50905060018110156200193557505060408051600080825260208201909252915062000ac2565b6003546000868152600460205260408120805491926001600160a01b03169163bea94b8b9190889081106200196e576200196e62002bb6565b60009182526020822001546040516001600160e01b031960e085901b168152620019a092600191889060040162003416565b600060405180830381865afa158015620019be573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620019e891908101906200344b565b9660019650945050505050565b6000828152602081815260408083208484529091528120546060919062001a1c81620024d6565b1562001a56576000858152600160209081526040808320878452909152812062001a479083620028dd565b93506001925062000ac2915050565b8062001a628162002979565b93509350505062000ac2565b6000806000805b60008062001a84878462002368565b915091508062001a9657505062001abb565b62001aa2828562003237565b93508262001ab081620034ca565b935050505062001a75565b9094909350915050565b6000806000805b60008062001adb87846200243f565b915091508062001aed57505062001abb565b62001af9828562003237565b93508262001b0781620034ca565b935050505062001acc565b815160035460408051630e65e36d60e11b815290516000926001600160a01b031691631ccbc6da9160048083019260209291908290030181865afa15801562001b5f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b859190620033cf565b905062001b938282620034e6565b34101562001bdb5760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b604482015260640162000904565b60005b828160ff16101562001e8757600260149054906101000a900463ffffffff1663ffffffff16848260ff168151811062001c1b5762001c1b62002bb6565b6020026020010151111562001c6a5760405162461bcd60e51b81526020600482015260146024820152730d2dcecc2d8d2c840c6d0eadcd640d8cadccee8d60631b604482015260640162000904565b62001c9586868360ff168151811062001c875762001c8762002bb6565b602002602001015162002a1f565b60003342878460ff168151811062001cb15762001cb162002bb6565b60200260200101518460405160200162001cf294939291906001600160a01b039490941684526020840192909252604083015260ff16606082015260800190565b604051602081830303815290604052805190602001209050600360009054906101000a90046001600160a01b03166001600160a01b0316634581a920848385898760ff168151811062001d495762001d4962002bb6565b60200260200101516040518563ffffffff1660e01b815260040162001d849392919092835260ff919091166020830152604082015260600190565b6000604051808303818588803b15801562001d9e57600080fd5b505af115801562001db3573d6000803e3d6000fd5b505050505062001dcf8760009081526004602052604090205490565b868360ff168151811062001de75762001de762002bb6565b6020026020010151101562001e4f578060046000898152602001908152602001600020878460ff168151811062001e225762001e2262002bb6565b60200260200101518154811062001e3d5762001e3d62002bb6565b60009182526020909120015562001e71565b6000878152600460209081526040822080546001810182559083529120018190555b508062001e7e8162003500565b91505062001bde565b505050505050565b600082815260046020526040812054811062001eee5760405162461bcd60e51b815260206004820152601760248201527f7468652066696c6520686173206e6f20636f6e74656e74000000000000000000604482015260640162000904565b60008381526004602052604081205462001f0b9060019062002be2565b90505b8281106200200457600354600085815260046020526040902080546001600160a01b03909216916395bc267391908690811062001f4f5762001f4f62002bb6565b90600052602060002001546040518263ffffffff1660e01b815260040162001f7991815260200190565b600060405180830381600087803b15801562001f9457600080fd5b505af115801562001fa9573d6000803e3d6000fd5b505050600085815260046020526040902080549091508062001fcf5762001fcf62003522565b60019003818190600052602060002001600090559055806000031562002004578062001ffb8162003538565b91505062001f0e565b509092915050565b60005b60008381526020818152604080832085845290915290205480620020345750620020ce565b6200203f81620024d6565b620020a0576000819050806001600160a01b0316632b68b9c66040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200208557600080fd5b505af11580156200209a573d6000803e3d6000fd5b50505050505b60008481526020818152604080832086845290915281205582620020c481620034ca565b935050506200200f565b50919050565b6000828152600460205260408120548290620020f39060019062002be2565b146200214d5760405162461bcd60e51b815260206004820152602260248201527f6f6e6c7920746865206c617374206368756e6b2063616e2062652072656d6f76604482015261195960f21b606482015260840162000904565b600354600084815260046020526040902080546001600160a01b03909216916395bc267391908590811062002186576200218662002bb6565b90600052602060002001546040518263ffffffff1660e01b8152600401620021b091815260200190565b600060405180830381600087803b158015620021cb57600080fd5b505af1158015620021e0573d6000803e3d6000fd5b505050600084815260046020526040902080549091508062002206576200220662003522565b600190038181906000526020600020016000905590556001905092915050565b600082815260208181526040808320848452909152812054806200224f57600091505062000ded565b6000848152602081905260408120816200226b86600162003237565b815260200190815260200160002054146200228b57600091505062000ded565b6200229681620024d6565b620022f7576000819050806001600160a01b0316632b68b9c66040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620022dc57600080fd5b505af1158015620022f1573d6000803e3d6000fd5b50505050505b5050600091825260208281526040808420928452919052812055600190565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600082815260046020526040812054819083106200238c5750600090508062000ac2565b6003546000858152600460205260408120805491926001600160a01b03169163afd5644d919087908110620023c557620023c562002bb6565b90600052602060002001546040518263ffffffff1660e01b8152600401620023ef91815260200190565b602060405180830381865afa1580156200240d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024339190620033cf565b95600195509350505050565b6000828152602081815260408083208484529091528120548190806200246d57600080925092505062000ac2565b6200247881620024d6565b156200248b57600062001a478260e01c90565b8062001a62816200259f565b6000805b60008381526020818152604080832084845290915290205480620024c0575062000ded565b81620024cc81620034ca565b925050506200249b565b600080620024e48360e01c90565b1192915050565b6000806000620024fb8562002b22565b808652909350905083601c8411156200259157601c81016000805b6020600162002527601c8a62002be2565b6200253490602062003237565b62002540919062002be2565b6200254c919062003552565b8110156200258d57600081815260208b815260409091205480855292506200257690849062003237565b9250806200258481620034ca565b91505062002516565b5050505b600192505050935093915050565b6000806001600160a01b038316620025bc57506000928392509050565b6000806040518061016001604052806101268152602001620036ab6101269139519050843b915080821015620025f9575060009485945092505050565b62002433818362002be2565b60008060008062002616866200259f565b91509150806200262f5760008093509350505062000ac2565b60006040518061016001604052806101268152602001620036ab6101269139519050828187893c509095600195509350505050565b600082815260208181526040808320848452909152902054806200270057811580620026b95750600083815260208190526040812081620026a760018662002be2565b81526020019081526020016000205414155b620027005760405162461bcd60e51b81526020600482015260166024820152751b5d5cdd081c995c1b1858d9481bdc88185c1c195b9960521b604482015260640162000904565b6200270b81620024d6565b620009b057806001600160a01b03811615620009ae57806001600160a01b0316632b68b9c66040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200275d57600080fd5b505af115801562002772573d6000803e3d6000fd5b5050505050505050565b6000806040518061016001604052806101268152602001620036ab61012691398585604051602001620027b29392919062003575565b60408051601f1981840301815291905290506000620027d46043602062003237565b30838201529050620027e9608c602062003237565b905030818301525060008382604051620028039062002ba8565b6200280f919062002ebd565b6040518091039082f09050801580156200282d573d6000803e3d6000fd5b509695505050505050565b805160208083015160e083901b911c1790601c811115620028d6576000603c8401815b602060016200286c601c8762002be2565b6200287990602062003237565b62002885919062002be2565b62002891919062003552565b811015620028d25781519250620028aa82602062003237565b6000828152602089905260409020849055915080620028c981620034ca565b9150506200285b565b5050505b5092915050565b60606000620028ec8362002b3d565b92509050601c811115620028d657603c82016000805b6020600162002913601c8762002be2565b6200292090602062003237565b6200292c919062002be2565b62002938919062003552565b811015620028d2576000818152602088815260409091205480855292506200296290849062003237565b9250806200297081620034ca565b91505062002902565b606060008060006200298b856200259f565b91509150806200299d576000620014f5565b6000826001600160401b03811115620029ba57620029ba62002ce7565b6040519080825280601f01601f191660200182016040528015620029e5576020820181803683370190505b50905060006040518061016001604052806101268152602001620036ab6101269139519050838160208401893c5095600195509350505050565b60008281526004602052604090205481111562002a785760405162461bcd60e51b81526020600482015260166024820152751b5d5cdd081c995c1b1858d9481bdc88185c1c195b9960521b604482015260640162000904565b60008281526004602052604090205481101562000b6957600354600083815260046020526040902080546001600160a01b03909216916395bc267391908490811062002ac85762002ac862002bb6565b90600052602060002001546040518263ffffffff1660e01b815260040162002af291815260200190565b600060405180830381600087803b15801562002b0d57600080fd5b505af115801562001e87573d6000803e3d6000fd5b60008062002b308360e01c90565b9360209390931b92915050565b6000606062002b4c8360e01c90565b9150602083901b9250816001600160401b0381111562002b705762002b7062002ce7565b6040519080825280601f01601f19166020018201604052801562002b9b576020820181803683370190505b5060208101939093525091565b61010b80620035a083390190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111562000ded5762000ded62002bcc565b6000808585111562002c0957600080fd5b8386111562002c1757600080fd5b5050820193919092039150565b600181811c9082168062002c3957607f821691505b602082108103620020ce57634e487b7160e01b600052602260045260246000fd5b828482376000838201600081526000845462002c768162002c24565b6001828116801562002c91576001811462002ca75762002cd8565b60ff198416865282151583028601945062002cd8565b8860005260208060002060005b8581101562002ccf5781548982015290840190820162002cb4565b50505082860194505b50929998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562002d285762002d2862002ce7565b604052919050565b60006001600160401b0382111562002d4c5762002d4c62002ce7565b50601f01601f191660200190565b600082601f83011262002d6c57600080fd5b813562002d8362002d7d8262002d30565b62002cfd565b81815284602083860101111562002d9957600080fd5b816020850160208301376000918101602001919091529392505050565b60008083601f84011262002dc957600080fd5b5081356001600160401b0381111562002de157600080fd5b60208301915083602082850101111562000ac257600080fd5b60008060006040848603121562002e1057600080fd5b83356001600160401b038082111562002e2857600080fd5b62002e368783880162002d5a565b9450602086013591508082111562002e4d57600080fd5b5062002e5c8682870162002db6565b9497909650939450505050565b60005b8381101562002e8657818101518382015260200162002e6c565b50506000910152565b6000815180845262002ea981602086016020860162002e69565b601f01601f19169290920160200192915050565b602081526000620010f2602083018462002e8f565b6000806040838503121562002ee657600080fd5b82356001600160401b0381111562002efd57600080fd5b62002f0b8582860162002d5a565b95602094909401359450505050565b60408152600062002f2f604083018562002e8f565b905082151560208301529392505050565b60006020828403121562002f5357600080fd5b81356001600160401b0381111562002f6a57600080fd5b62002f788482850162002d5a565b949350505050565b600082601f83011262002f9257600080fd5b813560206001600160401b0382111562002fb05762002fb062002ce7565b8160051b62002fc182820162002cfd565b928352848101820192828101908785111562002fdc57600080fd5b83870192505b8483101562002ffd5782358252918301919083019062002fe2565b979650505050505050565b6000806000606084860312156200301e57600080fd5b83356001600160401b03808211156200303657600080fd5b620030448783880162002d5a565b945060208601359150808211156200305b57600080fd5b620030698783880162002f80565b935060408601359150808211156200308057600080fd5b506200308f8682870162002f80565b9150509250925092565b80356001600160a01b038116811462000fef57600080fd5b60008060408385031215620030c557600080fd5b823563ffffffff81168114620030da57600080fd5b9150620030ea6020840162003099565b90509250929050565b600080600080606085870312156200310a57600080fd5b84356001600160401b03808211156200312257600080fd5b620031308883890162002d5a565b95506020870135945060408701359150808211156200314e57600080fd5b506200315d8782880162002db6565b95989497509550505050565b634e487b7160e01b600052602160045260246000fd5b602081016003831062003196576200319662003169565b91905290565b60008060408385031215620031b057600080fd5b82356001600160401b03811115620031c757600080fd5b620031d58582860162002d5a565b925050602083013560038110620031eb57600080fd5b809150509250929050565b600080604083850312156200320a57600080fd5b50508035926020909101359150565b6000602082840312156200322c57600080fd5b620010f28262003099565b8082018082111562000ded5762000ded62002bcc565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526018908201527f496e76616c69642066696c652075706c6f6164206d6f64650000000000000000604082015260600190565b601f821115620009b057600081815260208120601f850160051c81016020861015620032e25750805b601f850160051c820191505b8181101562001e8757828155600101620032ee565b81516001600160401b038111156200331f576200331f62002ce7565b620033378162003330845462002c24565b84620032b9565b602080601f8311600181146200336f5760008415620033565750858301515b600019600386901b1c1916600185901b17855562001e87565b600085815260208120601f198616915b82811015620033a0578886015182559484019460019091019084016200337f565b5085821015620033bf5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620033e257600080fd5b5051919050565b600060208284031215620033fc57600080fd5b815167ffffffffffffffff1981168114620010f257600080fd5b848152608081016002851062003430576200343062003169565b84602083015283604083015282606083015295945050505050565b6000602082840312156200345e57600080fd5b81516001600160401b038111156200347557600080fd5b8201601f810184136200348757600080fd5b80516200349862002d7d8262002d30565b818152856020838501011115620034ae57600080fd5b620034c182602083016020860162002e69565b95945050505050565b600060018201620034df57620034df62002bcc565b5060010190565b808202811582820484141762000ded5762000ded62002bcc565b600060ff821660ff810362003519576200351962002bcc565b60010192915050565b634e487b7160e01b600052603160045260246000fd5b6000816200354a576200354a62002bcc565b506000190190565b6000826200357057634e487b7160e01b600052601260045260246000fd5b500490565b600084516200358981846020890162002e69565b820183858237600093019283525090939250505056fe608060405260405161010b38038061010b83398101604081905261002291610041565b80518060208301f35b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561005457600080fd5b82516001600160401b038082111561006b57600080fd5b818501915085601f83011261007f57600080fd5b8151818111156100915761009161002b565b604051601f8201601f19908116603f011681019083821181831017156100b9576100b961002b565b8160405282815288868487010111156100d157600080fd5b600093505b828410156100f357848401860151818501870152928501926100d6565b60008684830101528096505050505050509291505056fe6080604052348015600f57600080fd5b506004361060325760003560e01c80632b68b9c61460375780638da5cb5b14603f575b600080fd5b603d6081565b005b60657f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161460ed5760405162461bcd60e51b815260206004820152600e60248201526d3737ba10333937b69037bbb732b960911b604482015260640160405180910390fd5b33fffea2646970667358221220fc66c9afb7cb2f6209ae28167cf26c6c06f86a82cbe3c56de99027979389a1be64736f6c63430008070033a2646970667358221220ca37666fdaafde9f1ff7d4cb28b73b67339f04232f3fceb779bd10e6f6eba2bb64736f6c63430008120033';
        const factory = new ethers.ContractFactory(flatDirectoryBlobAbi, contractByteCode, this.#wallet);
        try {
            const contract = await factory.deploy(0, {gasLimit: 8000000});
            await contract.waitForDeployment();

            // init
            if (ethStorage) {
                const success = await this.#initParams(contract, ethStorage);
                if (!success) {
                    console.error(`ERROR: init blob info failed!`);
                    return null;
                }
            }

            console.log(`FlatDirectory Address: ${await contract.getAddress()}`);
            this.#contractAddr = await contract.getAddress();
            return this.#contractAddr;
        } catch (e) {
            console.error(`ERROR: deploy flat directory failed!`, e.message);
            return null;
        }
    }

    async deployBlobDirectory() {
        return await this.deployDirectory(ETH_STORAGE);
    }

    async setDefaultFile(filename) {
        if (!this.#contractAddr) {
            console.error(`ERROR: flat directory not deployed!`);
            return;
        }
        if (!filename) {
            console.error(`ERROR: file name cannot be empty!`);
            return;
        }

        const fileContract = new ethers.Contract(this.#contractAddr, flatDirectoryBlobAbi, this.#wallet);
        const defaultFile = stringToHex(filename);
        try {
            const tx = await fileContract.setDefault(defaultFile);
            const txReceipt = await tx.wait();
            if (txReceipt.status) {
                console.log(`Set succeeds`);
            } else {
                console.error(`ERROR: set failed!`);
            }
        } catch (e) {
            console.error(`ERROR: set failed!`, e.message);
        }
    }

    async refund() {
        if (!this.#contractAddr) {
            console.error(`ERROR: flat directory not deployed!`);
            return;
        }

        const fileContract = new ethers.Contract(this.#contractAddr, flatDirectoryBlobAbi, this.#wallet);
        try {
            const tx = await fileContract.refund();
            const txReceipt = await tx.wait();
            if (txReceipt.status) {
                console.log(`Refund succeeds`);
            } else {
                console.error(`ERROR: transaction failed!`);
            }
        } catch (e) {
            console.error(`ERROR: transaction failed!`, e.message);
        }
    }

    async remove(fileName) {
        const fileContract = new ethers.Contract(this.#contractAddr, flatDirectoryBlobAbi, this.#wallet);
        const hexName = stringToHex(fileName);
        try {
            let tx = await fileContract.remove(hexName);
            const receipt = await tx.wait();
            if (receipt.status) {
                console.log(`Remove file: ${fileName} succeeded`);
            } else {
                console.log(`Failed to remove file: ${fileName}`);
            }
        } catch (e) {
            console.log(`Failed to remove file: ${fileName}`, e.message);
        }
    }

    async upload(filePath) {
        if (!this.#contractAddr) {
            console.error(`ERROR: flat directory not deployed!`);
            return;
        }
        const fileStat = fs.statSync(filePath);
        if (!fileStat.isFile()) {
            console.error(`ERROR: only upload file!`);
            return;
        }

        const fileContract = new ethers.Contract(this.#contractAddr, flatDirectoryBlobAbi, this.#wallet);
        const cost = await fileContract.upfrontPayment();

        const content = fs.readFileSync(filePath);
        const blobs = EncodeBlobs(content);
        const blobLength = blobs.length;
        const fileSize = fileStat.size;
        const fileName = filePath.substring(filePath.lastIndexOf("/") + 1);
        const hexName = stringToHex(fileName);

        let successIndex = 0;
        let uploadCount = 0;
        let uploadFileSize = 0;
        let totalCost = 0n;
        for (let i = 0; i < blobLength; i += MAX_BLOB_COUNT) {
            const blobArr = [];
            const indexArr = [];
            const lenArr = [];
            let max = i + MAX_BLOB_COUNT > blobLength ? blobLength : i + MAX_BLOB_COUNT;
            for (let j = i; j < max; j++) {
                blobArr.push(blobs[j]);
                indexArr.push(j);
                if (j === blobLength - 1) {
                    lenArr.push(fileSize - BLOB_FILE_SIZE * (blobLength - 1));
                } else {
                    lenArr.push(BLOB_FILE_SIZE);
                }
            }

            // check
            let hasChange = false;
            for (let j = 0; j < blobArr.length; j++) {
                const dataHash = await fileContract.getChunkHash(hexName, indexArr[j]);
                const localHash = this.#blobUploader.getBlobHash(blobArr[j]);
                if (dataHash !== localHash) {
                    hasChange = true;
                    break;
                }
            }
            if (!hasChange) {
                successIndex += indexArr.length;
                console.log(`File ${fileName} chunkId: ${indexArr}: The data is not changed.`);
                continue;
            }

            // send
            let success = false;
            try {
                const value = cost * BigInt(blobArr.length);
                const tx = await fileContract.writeChunks.populateTransaction(hexName, indexArr, lenArr, {
                    value
                });
                const hash = await this.#blobUploader.sendTx(tx, blobArr);
                console.log(`Transaction Id: ${hash}`);

                const txReceipt = await this.#blobUploader.getTxReceipt(hash);
                if (txReceipt && txReceipt.status) {
                    success = true;
                    totalCost += value;
                    uploadFileSize += BLOB_FILE_SIZE * indexArr.length;
                    if (i + indexArr.length === blobLength) {
                        uploadFileSize = uploadFileSize - BLOB_FILE_SIZE + lenArr[lenArr.length - 1];
                    }
                    uploadCount += indexArr.length;
                    successIndex += indexArr.length;
                    console.log(`File ${fileName} chunkId: ${indexArr} uploaded!`);
                }
            } catch (e) {
                console.log('Error:' + e.message);
            }
            if (!success) {
                break;
            }
        }
        return {
            totalChunkCount: blobLength,
            successIndex: successIndex,
            uploadSuccessCount: uploadCount,
            uploadFileSize: uploadFileSize,
            totalCost: totalCost,
        }
    }
}

module.exports = {
    EthStorage
}
